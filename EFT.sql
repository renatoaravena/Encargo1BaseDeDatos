


-- Eliminar objetos previos

BEGIN
    FOR r IN (SELECT table_name FROM user_tables) LOOP
        EXECUTE IMMEDIATE 'DROP TABLE "' || r.table_name || '" CASCADE CONSTRAINTS';
    END LOOP;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
    FOR s IN (SELECT sequence_name FROM user_sequences WHERE sequence_name NOT LIKE 'BIN$%') LOOP
        EXECUTE IMMEDIATE 'DROP SEQUENCE "' || s.sequence_name || '"';
    END LOOP;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/


--  SECUENCIAS (según instrucciones: REGION con seq iniciando en 21)

CREATE SEQUENCE SEQ_REGION
  START WITH 21
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;
-- (No creamos secuencia para COMUNA: COMUNA será IDENTITY con START 1050 INCREMENT 5)


-- TABLAS

CREATE TABLE REGION (
    ID_REGION    NUMBER                      NOT NULL,
    NOMBRE_REGION VARCHAR2(100)              NOT NULL,
    CONSTRAINT PK_REGION PRIMARY KEY (ID_REGION),
    CONSTRAINT UNQ_REGION_NOMBRE UNIQUE (NOMBRE_REGION)
);

CREATE TABLE COMUNA (
    ID_COMUNA NUMBER GENERATED ALWAYS AS IDENTITY
        (START WITH 1050 INCREMENT BY 5) NOT NULL,
    NOMBRE_COMUNA VARCHAR2(100) NOT NULL,
    ID_REGION NUMBER NOT NULL,
    CONSTRAINT PK_COMUNA PRIMARY KEY (ID_COMUNA),
    CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (ID_REGION)
        REFERENCES REGION (ID_REGION),
    CONSTRAINT UNQ_COMUNA_NOMBRE_REGION UNIQUE (NOMBRE_COMUNA, ID_REGION)
);

CREATE TABLE PLANTA (
    ID_PLANTA NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NOMBRE_PLANTA VARCHAR2(100) NOT NULL,
    DIRECCION VARCHAR2(150),
    ID_COMUNA NUMBER NOT NULL,
    CONSTRAINT PK_PLANTA PRIMARY KEY (ID_PLANTA),
    CONSTRAINT FK_PLANTA_COMUNA FOREIGN KEY (ID_COMUNA)
        REFERENCES COMUNA (ID_COMUNA),
    CONSTRAINT UNQ_PLANTA_NOMBRE UNIQUE (NOMBRE_PLANTA)
);

CREATE TABLE AFP (
    ID_AFP NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NOMBRE_AFP VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_AFP PRIMARY KEY (ID_AFP),
    CONSTRAINT UNQ_AFP_NOMBRE UNIQUE (NOMBRE_AFP)
);

CREATE TABLE SALUD (
    ID_SALUD NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NOMBRE_SALUD VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_SALUD PRIMARY KEY (ID_SALUD),
    CONSTRAINT UNQ_SALUD_NOMBRE UNIQUE (NOMBRE_SALUD)
);


--  EMPLEADOS (supertipo) y subtipos (Jefe, Operario, Técnico)

CREATE TABLE EMPLEADO (
    ID_EMPLEADO NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    RUT VARCHAR2(12) NOT NULL,
    NOMBRES VARCHAR2(100) NOT NULL,
    APELLIDOS VARCHAR2(100) NOT NULL,
    FECHA_CONTRATACION DATE NOT NULL,
    SUELDO_BASE NUMBER(12,2) NOT NULL,
    ESTADO_ACTIVO CHAR(1) DEFAULT 'S' NOT NULL,
    ID_PLANTA NUMBER NOT NULL,
    ID_AFP NUMBER NOT NULL,
    ID_SALUD NUMBER NOT NULL,
    JEFE_DIRECTO NUMBER,
    CONSTRAINT PK_EMPLEADO PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT UNQ_EMPLEADO_RUT UNIQUE (RUT),
    CONSTRAINT CK_EMPLEADO_ESTADO CHECK (ESTADO_ACTIVO IN ('S','N')),
    CONSTRAINT FK_EMPLEADO_PLANTA FOREIGN KEY (ID_PLANTA) REFERENCES PLANTA (ID_PLANTA),
    CONSTRAINT FK_EMPLEADO_AFP FOREIGN KEY (ID_AFP) REFERENCES AFP (ID_AFP),
    CONSTRAINT FK_EMPLEADO_SALUD FOREIGN KEY (ID_SALUD) REFERENCES SALUD (ID_SALUD),
    CONSTRAINT FK_EMPLEADO_JEFE FOREIGN KEY (JEFE_DIRECTO) REFERENCES EMPLEADO (ID_EMPLEADO)
);

CREATE TABLE JEFE_TURNO (
    ID_EMPLEADO NUMBER NOT NULL,
    AREA_RESPONSABILIDAD VARCHAR2(100) NOT NULL,
    MAX_OPERARIOS NUMBER NOT NULL,
    CONSTRAINT PK_JEFE_TURNO PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT FK_JEFE_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO)
);

CREATE TABLE OPERARIO (
    ID_EMPLEADO NUMBER NOT NULL,
    CATEGORIA_PROCESO VARCHAR2(50) NOT NULL,
    CERTIFICACION VARCHAR2(100),
    HORAS_ESTANDAR NUMBER DEFAULT 8 NOT NULL,
    CONSTRAINT PK_OPERARIO PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT FK_OPERARIO_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO)
);

CREATE TABLE TECNICO_MANTENCION (
    ID_EMPLEADO NUMBER NOT NULL,
    ESPECIALIDAD VARCHAR2(50) NOT NULL,
    NIVEL_CERTIFICACION VARCHAR2(50),
    TIEMPO_RESPUESTA_STD NUMBER,
    CONSTRAINT PK_TECNICO PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT FK_TECNICO_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO)
);


--  Máquinas, tipos y operaciones

CREATE TABLE TIPO_MAQUINA (
    ID_TIPO_MAQUINA NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NOMBRE_TIPO VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_TIPO_MAQUINA PRIMARY KEY (ID_TIPO_MAQUINA),
    CONSTRAINT UNQ_TIPO_MAQUINA_NOMBRE UNIQUE (NOMBRE_TIPO)
);

CREATE TABLE MAQUINA (
    NUMERO_MAQUINA NUMBER NOT NULL,
    ID_PLANTA NUMBER NOT NULL,
    NOMBRE_MAQUINA VARCHAR2(100) NOT NULL,
    ESTADO_ACTIVO CHAR(1) DEFAULT 'S' NOT NULL,
    ID_TIPO_MAQUINA NUMBER NOT NULL,
    CONSTRAINT PK_MAQUINA PRIMARY KEY (NUMERO_MAQUINA, ID_PLANTA),
    CONSTRAINT FK_MAQUINA_PLANTA FOREIGN KEY (ID_PLANTA) REFERENCES PLANTA (ID_PLANTA),
    CONSTRAINT FK_MAQUINA_TIPO FOREIGN KEY (ID_TIPO_MAQUINA) REFERENCES TIPO_MAQUINA (ID_TIPO_MAQUINA),
    CONSTRAINT CK_MAQUINA_ESTADO CHECK (ESTADO_ACTIVO IN ('S','N'))
);


--  Turnos, órdenes de mantención y asignaciones

CREATE TABLE TURNO (
    ID_TURNO NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NOMBRE_TURNO VARCHAR2(50) NOT NULL,
    HORA_INICIO CHAR(5) NOT NULL,   -- formato 'HH:MM'
    HORA_TERMINO CHAR(5) NOT NULL,  -- formato 'HH:MM'
    CONSTRAINT PK_TURNO PRIMARY KEY (ID_TURNO),
    CONSTRAINT UNQ_TURNO_NOMBRE UNIQUE (NOMBRE_TURNO)
);

CREATE TABLE ORDEN_MANTENCION (
    ID_ORDEN NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    NUMERO_MAQUINA NUMBER NOT NULL,
    ID_PLANTA NUMBER NOT NULL,
    ID_TECNICO NUMBER NOT NULL,
    FECHA_PROGRAMADA DATE NOT NULL,
    FECHA_EJECUCION DATE,
    DESCRIPCION VARCHAR2(400),
    CONSTRAINT PK_ORDEN PRIMARY KEY (ID_ORDEN),
    CONSTRAINT FK_ORDEN_MAQUINA FOREIGN KEY (NUMERO_MAQUINA, ID_PLANTA)
        REFERENCES MAQUINA (NUMERO_MAQUINA, ID_PLANTA),
    CONSTRAINT FK_ORDEN_TECNICO FOREIGN KEY (ID_TECNICO) REFERENCES TECNICO_MANTENCION (ID_EMPLEADO),
    CONSTRAINT CK_ORDEN_FECHAS CHECK (FECHA_EJECUCION IS NULL OR FECHA_EJECUCION >= FECHA_PROGRAMADA)
);

CREATE TABLE ASIGNACION_TURNO (
    ID_ASIGNACION NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    FECHA_TURNO DATE NOT NULL,
    ID_EMPLEADO NUMBER NOT NULL,
    ID_TURNO NUMBER NOT NULL,
    NUMERO_MAQUINA NUMBER NOT NULL,
    ID_PLANTA NUMBER NOT NULL,
    ROL_TURNO VARCHAR2(100),
    CONSTRAINT PK_ASIGNACION PRIMARY KEY (ID_ASIGNACION),
    CONSTRAINT FK_ASIG_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO),
    CONSTRAINT FK_ASIG_TURNO FOREIGN KEY (ID_TURNO) REFERENCES TURNO (ID_TURNO),
    CONSTRAINT FK_ASIG_MAQUINA FOREIGN KEY (NUMERO_MAQUINA, ID_PLANTA) REFERENCES MAQUINA (NUMERO_MAQUINA, ID_PLANTA),
    CONSTRAINT UK_ASIG_EMPLEADO_FECHA UNIQUE (ID_EMPLEADO, FECHA_TURNO)  -- impide asignación doble en la misma fecha
);

COMMIT;


--  POBLAMIENTO

-- A) REGIONES (usar secuencia, deben iniciar en 21)
INSERT INTO REGION (ID_REGION, NOMBRE_REGION) VALUES (SEQ_REGION.NEXTVAL, 'Región Metropolitana');
INSERT INTO REGION (ID_REGION, NOMBRE_REGION) VALUES (SEQ_REGION.NEXTVAL, 'Región de Valparaíso');
INSERT INTO REGION (ID_REGION, NOMBRE_REGION) VALUES (SEQ_REGION.NEXTVAL, 'Región del Biobío');
INSERT INTO REGION (ID_REGION, NOMBRE_REGION) VALUES (SEQ_REGION.NEXTVAL, 'Región de O''Higgins');

-- B) COMUNAS (IDENTITY con START 1050 INCREMENT 5)

INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Santiago', 21);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Quilicura', 21);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Valparaíso', 22);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Quilpué', 22);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Concepción', 23);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Talcahuano', 23);
INSERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Rancagua', 24);

-- C) PLANTAS (usar IDs de COMUNA generados arriba)

-- Asumimos los ID_COMUNA generados empezaron en 1050 y aumentan en 5; los inserts aparecen en el mismo orden.
-- (1050: Santiago, 1055: Quilicura, 1060: Valparaíso, 1065: Quilpué, 1070: Concepción, 1075: Talcahuano, 1080: Rancagua)
INSERT INTO PLANTA (NOMBRE_PLANTA, DIRECCION, ID_COMUNA) VALUES ('Planta Santiago Centro', 'Av. Independencia 1234', 1050);
INSERT INTO PLANTA (NOMBRE_PLANTA, DIRECCION, ID_COMUNA) VALUES ('Planta Norte Santiago', 'Av. Norte 2222', 1055);
INSERT INTO PLANTA (NOMBRE_PLANTA, DIRECCION, ID_COMUNA) VALUES ('Planta Valparaíso', 'Camino Industrial 250', 1060);
INSERT INTO PLANTA (NOMBRE_PLANTA, DIRECCION, ID_COMUNA) VALUES ('Planta Concepción', 'Ruta 160 km 12', 1070);

-- D) TURNOS (únicos, nombres no se repiten)
INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Mañana', '06:00', '14:00');
INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Tarde',  '14:00', '22:00');
INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Noche',  '22:00', '06:00');
INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Turno Extra', '20:30', '23:59'); -- para pruebas: inicio > 20:00

COMMIT;


--  DATOS EJEMPLO

-- Poblar AFP y SALUD
INSERT INTO AFP (NOMBRE_AFP) VALUES ('AFP Modelo');
INSERT INTO AFP (NOMBRE_AFP) VALUES ('AFP Habitat');
INSERT INTO SALUD (NOMBRE_SALUD) VALUES ('Isapre ABC');
INSERT INTO SALUD (NOMBRE_SALUD) VALUES ('Fonasa');

-- Tipos de máquina
INSERT INTO TIPO_MAQUINA (NOMBRE_TIPO) VALUES ('Horno');
INSERT INTO TIPO_MAQUINA (NOMBRE_TIPO) VALUES ('Línea IS');
INSERT INTO TIPO_MAQUINA (NOMBRE_TIPO) VALUES ('Equipo de Temple');

-- Máquinas (NUMERO_MAQUINA + ID_PLANTA => PK compuesta)
-- Usamos PLANTA IDs (se generan por identity); asumimos primer PLANTA = 1, 2, 3, 4 según inserts arriba.
INSERT INTO MAQUINA (NUMERO_MAQUINA, ID_PLANTA, NOMBRE_MAQUINA, ESTADO_ACTIVO, ID_TIPO_MAQUINA)
VALUES (101, 1, 'Horno A1', 'S', 1);
INSERT INTO MAQUINA (NUMERO_MAQUINA, ID_PLANTA, NOMBRE_MAQUINA, ESTADO_ACTIVO, ID_TIPO_MAQUINA)
VALUES (102, 1, 'Línea IS 1', 'S', 2);
INSERT INTO MAQUINA (NUMERO_MAQUINA, ID_PLANTA, NOMBRE_MAQUINA, ESTADO_ACTIVO, ID_TIPO_MAQUINA)
VALUES (201, 3, 'Horno V1', 'S', 1);

-- Empleados de ejemplo
INSERT INTO EMPLEADO (RUT, NOMBRES, APELLIDOS, FECHA_CONTRATACION, SUELDO_BASE, ESTADO_ACTIVO, ID_PLANTA, ID_AFP, ID_SALUD, JEFE_DIRECTO)
VALUES ('12345678-9','Juan','Pérez', TO_DATE('2020-03-01','YYYY-MM-DD'), 800000, 'S', 1, 1, 1, NULL);

INSERT INTO EMPLEADO (RUT, NOMBRES, APELLIDOS, FECHA_CONTRATACION, SUELDO_BASE, ESTADO_ACTIVO, ID_PLANTA, ID_AFP, ID_SALUD, JEFE_DIRECTO)
VALUES ('98765432-1','María','González', TO_DATE('2021-07-15','YYYY-MM-DD'), 650000, 'S', 1, 2, 2, 1);

INSERT INTO EMPLEADO (RUT, NOMBRES, APELLIDOS, FECHA_CONTRATACION, SUELDO_BASE, ESTADO_ACTIVO, ID_PLANTA, ID_AFP, ID_SALUD, JEFE_DIRECTO)
VALUES ('11223344-5','Carlos','Soto', TO_DATE('2019-11-20','YYYY-MM-DD'), 700000, 'S', 3, 1, 2, NULL);

-- Subtipos
-- Hacemos a Juan (ID_EMPLEADO = 1) Jefe, María (2) Operaria, Carlos (3) Técnico
INSERT INTO JEFE_TURNO (ID_EMPLEADO, AREA_RESPONSABILIDAD, MAX_OPERARIOS) VALUES (1, 'Líneas IS', 8);
INSERT INTO OPERARIO (ID_EMPLEADO, CATEGORIA_PROCESO, CERTIFICACION, HORAS_ESTANDAR) VALUES (2, 'Inspección', 'Cert-INS-001', 8);
INSERT INTO TECNICO_MANTENCION (ID_EMPLEADO, ESPECIALIDAD, NIVEL_CERTIFICACION, TIEMPO_RESPUESTA_STD)
VALUES (3, 'Eléctrica', 'Nivel 2', 120);

-- Órdenes de mantención (ejemplo)
INSERT INTO ORDEN_MANTENCION (NUMERO_MAQUINA, ID_PLANTA, ID_TECNICO, FECHA_PROGRAMADA, FECHA_EJECUCION, DESCRIPCION)
VALUES (101, 1, 3, TO_DATE('2025-10-01','YYYY-MM-DD'), TO_DATE('2025-10-02','YYYY-MM-DD'), 'Revisión general Horno A1');

-- Asignaciones de turno (ejemplo)
INSERT INTO ASIGNACION_TURNO (FECHA_TURNO, ID_EMPLEADO, ID_TURNO, NUMERO_MAQUINA, ID_PLANTA, ROL_TURNO)
VALUES (TO_DATE('2025-10-10','YYYY-MM-DD'), 2, 1, 102, 1, 'Inspector');

COMMIT;

--  FASE 4: CONSULTAS DE RECUPERACIÓN (INFORMES)

PROMPT ======= INFORME 1: Turnos con inicio posterior a '20:00' (orden descendente) =======
-- Nota: HORA_INICIO es CHAR(5) en formato 'HH:MM' — comparar como texto funciona para este formato.
SELECT NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO
FROM TURNO
WHERE HORA_INICIO > '20:00'
ORDER BY HORA_INICIO DESC;

PROMPT ======= INFORME 2: Turnos diurnos entre '06:00' y '14:59' (orden ascendente) =======
SELECT NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO
FROM TURNO
WHERE HORA_INICIO BETWEEN '06:00' AND '14:59'
ORDER BY HORA_INICIO ASC;

-- Ejemplos adicionales de comprobación de integridad 
PROMPT ======= EJEMPLO: Listado de máquinas y su planta =======
SELECT m.numero_maquina, m.nombre_maquina, p.nombre_planta
FROM MAQUINA m
JOIN PLANTA p ON m.ID_PLANTA = p.ID_PLANTA
ORDER BY p.NOMBRE_PLANTA, m.NUMERO_MAQUINA;

PROMPT ======= EJEMPLO: Empleados y su rol/subtipo =======
SELECT e.id_empleado, e.rut, e.nombres || ' ' || e.apellidos AS nombre_completo,
       CASE
         WHEN jt.id_empleado IS NOT NULL THEN 'Jefe de Turno'
         WHEN op.id_empleado IS NOT NULL THEN 'Operario'
         WHEN tm.id_empleado IS NOT NULL THEN 'Técnico'
         ELSE 'Sin subtipo'
       END AS rol
FROM EMPLEADO e
LEFT JOIN JEFE_TURNO jt ON e.id_empleado = jt.id_empleado
LEFT JOIN OPERARIO op ON e.id_empleado = op.id_empleado
LEFT JOIN TECNICO_MANTENCION tm ON e.id_empleado = tm.id_empleado
ORDER BY e.id_empleado;

COMMIT;

PROMPT Script finalizado correctamente.
SERT INTO COMUNA (NOMBRE_COMUNA, ID_REGION) VALUES ('Concepción', 23);

INSERT INTO PLANTA (NOMBRE_PLANTA, DIRECCION, ID_COMUNA) VALUES ('Planta Santiago', 'Av. Independencia 1234', 1050);
INSERT INTO PLANTA (NOMBRE_PLANTA, DIRECCION, ID_COMUNA) VALUES ('Planta Valparaíso', 'Camino Industrial 250', 1055);

INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Mañana', '06:00', '14:00');
INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Tarde', '14:00', '22:00');
INSERT INTO TURNO (NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO) VALUES ('Noche', '22:00', '06:00');

COMMIT;

-- Fase 4: Consultas de recuperación
SELECT NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO
FROM TURNO
WHERE HORA_INICIO > '20:00'
ORDER BY HORA_INICIO DESC;

SELECT NOMBRE_TURNO, HORA_INICIO, HORA_TERMINO
FROM TURNO
WHERE HORA_INICIO BETWEEN '06:00' AND '14:59'
ORDER BY HORA_INICIO ASC;

COMMIT;
PROMPT Script finalizado correctamente;
